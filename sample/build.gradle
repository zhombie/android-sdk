plugins {
    id 'com.android.application'

    id 'kotlin-android'
    id 'kotlin-kapt'

    // Google Services
    id 'com.google.gms.google-services'

    // Secrets Gradle Plugin
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'

    defaultConfig {
        applicationId 'kz.garage'

        minSdkVersion 23
        targetSdkVersion 31

        versionCode project.ext.version_code
        versionName project.version
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def googleMapsApiKey = properties.getProperty('google.maps.key')
    if (googleMapsApiKey == null) {
        googleMapsApiKey = 'AIzaSyBArep8mVDm22a0c4If9Vs4nvevN4Tfma8'
    }

    buildTypes {
        debug {
            resValue 'string', 'google_maps_api_key', googleMapsApiKey

            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            resValue 'string', 'google_maps_api_key', googleMapsApiKey

            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.jetbrains.kotlin') {
                details.useVersion kotlin_version
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Activity
    implementation 'androidx.activity:activity-ktx:1.4.0'

    // AppCompat
    implementation 'androidx.appcompat:appcompat:1.4.1'

    // Core
    implementation 'androidx.core:core-ktx:1.7.0'

    // Fragment
    implementation 'androidx.fragment:fragment-ktx:1.4.1'

    // Material Design Components
    implementation "com.google.android.material:material:1.5.0"

    // Google Play Services
    implementation 'com.google.android.gms:play-services-basement:18.0.0'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.maps.android:android-maps-utils:2.3.0'

    // Firebase Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx:20.1.0'

    // LeakCanary
    // debugImplementation because LeakCanary should only run in debug builds
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'

    // Library
    def isRemoteDependencyEnabled = false

    if (isRemoteDependencyEnabled) {
        def libraryVersion = project.version
        implementation "com.github.zhombie.garage:activity:$libraryVersion"
        implementation "com.github.zhombie.garage:animation-funhouse:$libraryVersion"
        implementation "com.github.zhombie.garage:animation-scale:$libraryVersion"
        implementation "com.github.zhombie.garage:context:$libraryVersion"
        implementation "com.github.zhombie.garage:drawable:$libraryVersion"
        implementation "com.github.zhombie.garage:file-extension:$libraryVersion"
        implementation "com.github.zhombie.garage:file-size:$libraryVersion"
        implementation "com.github.zhombie.garage:fragment:$libraryVersion"
        implementation "com.github.zhombie.garage:json:$libraryVersion"
        implementation "com.github.zhombie.garage:kotlin:$libraryVersion"
        implementation "com.github.zhombie.garage:lifecycle-livedata:$libraryVersion"
        implementation "com.github.zhombie.garage:lifecycle-viewmodel:$libraryVersion"
        implementation "com.github.zhombie.garage:locale:$libraryVersion"
        implementation "com.github.zhombie.garage:location-compass:$libraryVersion"
        implementation "com.github.zhombie.garage:location-core:$libraryVersion"
        implementation "com.github.zhombie.garage:location-gms:$libraryVersion"
        implementation "com.github.zhombie.garage:material-tablayout:$libraryVersion"
        implementation "com.github.zhombie.garage:multimedia-store:$libraryVersion"
        implementation "com.github.zhombie.garage:permission:$libraryVersion"
        implementation "com.github.zhombie.garage:popup-tooltip:$libraryVersion"
        implementation "com.github.zhombie.garage:recyclerview:$libraryVersion"
        implementation "com.github.zhombie.garage:text:$libraryVersion"
        implementation "com.github.zhombie.garage:textview:$libraryVersion"
        implementation "com.github.zhombie.garage:view:$libraryVersion"
        implementation "com.github.zhombie.garage:window:$libraryVersion"
    } else {
        implementation project(':activity')
        implementation project(':animation:funhouse')
        implementation project(':animation:scale')
        implementation project(':context')
        implementation project(':drawable')
        implementation project(':file:extension')
        implementation project(':file:size')
        implementation project(':fragment')
        implementation project(':json')
        implementation project(':kotlin')
        implementation project(':lifecycle:livedata')
        implementation project(':lifecycle:viewmodel')
        implementation project(':locale')
        implementation project(':location:compass')
        implementation project(':location:core')
        implementation project(':location:gms')
        implementation project(':material:tablayout')
        implementation project(':multimedia:store')
        implementation project(':permission')
        implementation project(':popup:tooltip')
        implementation project(':recyclerview')
        implementation project(':text')
        implementation project(':textview')
        implementation project(':view')
        implementation project(':window')
    }
}